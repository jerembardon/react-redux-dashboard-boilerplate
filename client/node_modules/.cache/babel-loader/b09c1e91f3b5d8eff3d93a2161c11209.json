{"ast":null,"code":"import _classCallCheck from \"/Users/j.bardon/Desktop/Test/reactapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/j.bardon/Desktop/Test/reactapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/j.bardon/Desktop/Test/reactapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/j.bardon/Desktop/Test/reactapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/j.bardon/Desktop/Test/reactapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React, { Component } from \"react\";\n\nvar Enfant =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Enfant, _Component);\n\n  function Enfant(props) {\n    var _this;\n\n    _classCallCheck(this, Enfant);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Enfant).call(this, props));\n    _this.state = {\n      value: undefined,\n      message: \"rien à affiché\"\n    };\n    return _this;\n  } //   componentWillReceiveProps(nextProps, nextState) {\n  //     if (this.props.value !== nextProps.value) {\n  //       console.log(\"vrai\");\n  //       this.setState({\n  //         message: \"les valeurs sont différentes\"\n  //       });\n  //     } else if (this.props.value === nextProps.value) {\n  //       this.setState({\n  //         message: \"les valeurs sont égal\"\n  //       });\n  //     }\n  //   }\n\n\n  _createClass(Enfant, [{\n    key: \"getSnapshotBeforeUpdate\",\n    value: function getSnapshotBeforeUpdate(prevProps, prevState) {\n      return {\n        pourLeDidUpdate: \"Cadeau\"\n      };\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, argsFromSnapShotBeforeUpdate) {\n      console.log(\"componentDidUpdate\", argsFromSnapShotBeforeUpdate);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.state.message;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      console.log(props.value, state.value);\n      var message = \"rien à afficher\";\n\n      if (props.value === 3 && state.value === 3) {\n        message = \"wow incroyable\";\n      }\n\n      return {\n        value: props.value,\n        message: message\n      };\n    }\n  }]);\n\n  return Enfant;\n}(Component);\n\nexport default Enfant;","map":{"version":3,"sources":["/Users/j.bardon/Desktop/Test/reactapp/src/Enfant.js"],"names":["React","Component","Enfant","props","state","value","undefined","message","prevProps","prevState","pourLeDidUpdate","argsFromSnapShotBeforeUpdate","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,M;;;;;AAEJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gFAAMA,KAAN;AADiB,UADnBC,KACmB,GADX;AAAEC,MAAAA,KAAK,EAAEC,SAAT;AAAoBC,MAAAA,OAAO,EAAE;AAA7B,KACW;AAAA;AAElB,G,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;4CAcwBC,S,EAAWC,S,EAAW;AAC5C,aAAO;AACLC,QAAAA,eAAe,EAAE;AADZ,OAAP;AAGD;;;uCAEkBF,S,EAAWC,S,EAAWE,4B,EAA8B;AACrEC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,4BAAlC;AACD;;;6BAEQ;AACP,aAAO,KAAKP,KAAL,CAAWG,OAAlB;AACD;;;6CAxB+BJ,K,EAAOC,K,EAAO;AAC5CQ,MAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACE,KAAlB,EAAyBD,KAAK,CAACC,KAA/B;AACA,UAAIE,OAAO,GAAG,iBAAd;;AACA,UAAIJ,KAAK,CAACE,KAAN,KAAgB,CAAhB,IAAqBD,KAAK,CAACC,KAAN,KAAgB,CAAzC,EAA4C;AAC1CE,QAAAA,OAAO,GAAG,gBAAV;AACD;;AACD,aAAO;AACLF,QAAAA,KAAK,EAAEF,KAAK,CAACE,KADR;AAELE,QAAAA,OAAO,EAAEA;AAFJ,OAAP;AAID;;;;EA7BkBN,S;;AA8CrB,eAAeC,MAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Enfant extends Component {\n  state = { value: undefined, message: \"rien à affiché\" };\n  constructor(props) {\n    super(props);\n  }\n\n  //   componentWillReceiveProps(nextProps, nextState) {\n  //     if (this.props.value !== nextProps.value) {\n  //       console.log(\"vrai\");\n  //       this.setState({\n  //         message: \"les valeurs sont différentes\"\n  //       });\n  //     } else if (this.props.value === nextProps.value) {\n  //       this.setState({\n  //         message: \"les valeurs sont égal\"\n  //       });\n  //     }\n  //   }\n\n  static getDerivedStateFromProps(props, state) {\n    console.log(props.value, state.value);\n    let message = \"rien à afficher\";\n    if (props.value === 3 && state.value === 3) {\n      message = \"wow incroyable\";\n    }\n    return {\n      value: props.value,\n      message: message\n    };\n  }\n\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    return {\n      pourLeDidUpdate: \"Cadeau\"\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState, argsFromSnapShotBeforeUpdate) {\n    console.log(\"componentDidUpdate\", argsFromSnapShotBeforeUpdate);\n  }\n\n  render() {\n    return this.state.message;\n  }\n}\n\nexport default Enfant;\n"]},"metadata":{},"sourceType":"module"}