{"ast":null,"code":"import _objectDestructuringEmpty from \"/Users/j.bardon/Desktop/Test/reactapp/client/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport _classCallCheck from \"/Users/j.bardon/Desktop/Test/reactapp/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/j.bardon/Desktop/Test/reactapp/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/j.bardon/Desktop/Test/reactapp/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/j.bardon/Desktop/Test/reactapp/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/j.bardon/Desktop/Test/reactapp/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/j.bardon/Desktop/Test/reactapp/client/src/components/Auth/signup.jsx\";\nimport React, { Component } from \"react\";\nimport * as actions from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport { reduxForm, Field } from \"redux-form\";\nimport * as validations from \"../../helpers/validations\";\nvar FIELDS = {\n  email: \"email\",\n  password: \"password\",\n  secondPassword: \"secondPassword\"\n};\n\nvar Signup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Signup, _Component);\n\n  function Signup() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Signup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Signup)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSubmit = function (data) {};\n\n    _this.renderInputComponent = function (field) {\n      return React.createElement(\"div\", {\n        className: \"row justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        className: \"col-md-4 form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"bmd-label-floating\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, field.label), React.createElement(\"input\", Object.assign({}, field.input, {\n        type: field.type,\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, field.errors)));\n    };\n\n    return _this;\n  }\n\n  _createClass(Signup, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit;\n\n      _objectDestructuringEmpty(_this$props.fields);\n\n      return React.createElement(\"form\", {\n        onSubmit: handleSubmit(this.handleSubmit),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Inscription\")), React.createElement(Field, {\n        name: FIELDS.email,\n        component: this.renderInputComponent,\n        type: \"text\",\n        label: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: FIELDS.password,\n        component: this.renderInputComponent,\n        type: \"password\",\n        label: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: FIELDS.secondPassword,\n        component: this.renderInputComponent,\n        type: \"password\",\n        label: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row justify-content-md-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-raised\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Inscription\")));\n    }\n  }]);\n\n  return Signup;\n}(Component);\n\nfunction validateForm(formValues) {\n  console.log(formValues);\n  var errors = {};\n  errors.email = validations.validateEmail(formValues.email);\n  errors.password = validations.validateNotEmpty(formValues.password);\n  errors.secondPassword = validations.validateEqual(formValues.password, formValues.secondPassword);\n  console.log(errors);\n  return errors;\n}\n\nvar SignupForm = reduxForm({\n  form: \"SignupForm\",\n  fields: Object.keys(FIELDS),\n  validateForm: validateForm\n})(Signup);\nexport default connect(null, actions)(SignupForm);","map":{"version":3,"sources":["/Users/j.bardon/Desktop/Test/reactapp/client/src/components/Auth/signup.jsx"],"names":["React","Component","actions","connect","reduxForm","Field","validations","FIELDS","email","password","secondPassword","Signup","handleSubmit","data","renderInputComponent","field","label","input","type","errors","props","fields","validateForm","formValues","console","log","validateEmail","validateNotEmpty","validateEqual","SignupForm","form","Object","keys"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport * as actions from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport { reduxForm, Field } from \"redux-form\";\nimport * as validations from \"../../helpers/validations\";\n\nconst FIELDS = {\n  email: \"email\",\n  password: \"password\",\n  secondPassword: \"secondPassword\"\n};\n\nclass Signup extends Component {\n  handleSubmit = data => {};\n\n  renderInputComponent = field => {\n    return (\n      <div className=\"row justify-content-md-center\">\n        <fieldset className=\"col-md-4 form-group\">\n          <label className=\"bmd-label-floating\">{field.label}</label>\n          <input {...field.input} type={field.type} className=\"form-control\" />\n          <div>{field.errors}</div>\n        </fieldset>\n      </div>\n    );\n  };\n\n  render() {\n    const {\n      handleSubmit,\n      fields: {}\n    } = this.props;\n    return (\n      <form onSubmit={handleSubmit(this.handleSubmit)}>\n        <div className=\"row justify-content-md-center\">\n          <h1>Inscription</h1>\n        </div>\n        <Field\n          name={FIELDS.email}\n          component={this.renderInputComponent}\n          type=\"text\"\n          label=\"email\"\n        />\n        <Field\n          name={FIELDS.password}\n          component={this.renderInputComponent}\n          type=\"password\"\n          label=\"password\"\n        />\n        <Field\n          name={FIELDS.secondPassword}\n          component={this.renderInputComponent}\n          type=\"password\"\n          label=\"password\"\n        />\n\n        <div className=\"row justify-content-md-center\">\n          <button type=\"submit\" className=\"btn btn-primary btn-raised\">\n            Inscription\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nfunction validateForm(formValues) {\n  console.log(formValues);\n  const errors = {};\n  errors.email = validations.validateEmail(formValues.email);\n  errors.password = validations.validateNotEmpty(formValues.password);\n  errors.secondPassword = validations.validateEqual(\n    formValues.password,\n    formValues.secondPassword\n  );\n  console.log(errors);\n  return errors;\n}\n\nconst SignupForm = reduxForm({\n  form: \"SignupForm\",\n  fields: Object.keys(FIELDS),\n  validateForm\n})(Signup);\n\nexport default connect(\n  null,\n  actions\n)(SignupForm);\n"]},"metadata":{},"sourceType":"module"}