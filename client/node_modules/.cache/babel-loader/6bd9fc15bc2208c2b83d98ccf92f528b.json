{"ast":null,"code":"var _jsxFileName = \"/Users/j.bardon/Desktop/Test/reactapp/client/src/index.js\";\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./store/reducers\";\nimport { setAuthentification } from \"./store/actions\"; // Bootstrap (Use framework you want here, I like bootstrap then I use bootstrap)\n\nimport $ from \"jquery\";\nimport Popper from \"popper.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nvar invariant = require(\"redux-immutable-state-invariant\").default();\n\nvar createStoreWithMiddleware = applyMiddleware(invariant, thunk)(createStore);\nvar store = createStoreWithMiddleware(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nvar token = localStorage.getItem(\"Token\");\n\nif (token) {\n  store.dispatch(setAuthentification(true));\n}\n\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}))), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/j.bardon/Desktop/Test/reactapp/client/src/index.js"],"names":["React","Provider","createStore","applyMiddleware","BrowserRouter","ReactDOM","App","thunk","reducers","setAuthentification","$","Popper","invariant","require","default","createStoreWithMiddleware","store","window","__REDUX_DEVTOOLS_EXTENSION__","token","localStorage","getItem","dispatch","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AAEA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAASC,mBAAT,QAAoC,iBAApC,C,CAEA;;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAO,sCAAP;;AAEA,IAAMC,SAAS,GAAGC,OAAO,CAAC,iCAAD,CAAP,CAA2CC,OAA3C,EAAlB;;AACA,IAAMC,yBAAyB,GAAGZ,eAAe,CAACS,SAAD,EAAYL,KAAZ,CAAf,CAChCL,WADgC,CAAlC;AAIA,IAAMc,KAAK,GAAGD,yBAAyB,CACrCP,QADqC,EAErCS,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAFF,CAAvC;AAKA,IAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,IAAIF,KAAJ,EAAW;AACTH,EAAAA,KAAK,CAACM,QAAN,CAAeb,mBAAmB,CAAC,IAAD,CAAlC;AACD;;AAEDJ,QAAQ,CAACkB,MAAT,CACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEP,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,EAMEQ,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF","sourcesContent":["import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\n\nimport thunk from \"redux-thunk\";\nimport reducers from \"./store/reducers\";\nimport { setAuthentification } from \"./store/actions\";\n\n// Bootstrap (Use framework you want here, I like bootstrap then I use bootstrap)\nimport $ from \"jquery\";\nimport Popper from \"popper.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst invariant = require(\"redux-immutable-state-invariant\").default();\nconst createStoreWithMiddleware = applyMiddleware(invariant, thunk)(\n  createStore\n);\n\nconst store = createStoreWithMiddleware(\n  reducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nconst token = localStorage.getItem(\"Token\");\nif (token) {\n  store.dispatch(setAuthentification(true));\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"]},"metadata":{},"sourceType":"module"}